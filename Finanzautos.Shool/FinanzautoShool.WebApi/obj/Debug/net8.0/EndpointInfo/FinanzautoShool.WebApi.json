{
  "openapi": "3.0.1",
  "info": {
    "title": "Mi API",
    "version": "v1"
  },
  "paths": {
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Inicia sesión en el sistema y genera un token de autenticación.",
        "requestBody": {
          "description": "Objeto que contiene el nombre de usuario y contraseña.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Autenticación exitosa. Se devuelve un token JWT."
          },
          "401": {
            "description": "Credenciales incorrectas. No autorizado."
          }
        }
      }
    },
    "/api/Course/CreateCourse": {
      "post": {
        "tags": [
          "Course"
        ],
        "summary": "Crea un nuevo curso en el sistema.",
        "requestBody": {
          "description": "Objeto que contiene la información del curso a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDto"
                }
              }
            }
          },
          "201": {
            "description": "Curso creado exitosamente."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/Course/GetAllCourse": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Obtiene la lista de todos los cursos disponibles.",
        "responses": {
          "200": {
            "description": "Lista de cursos obtenida correctamente.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeacherDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeacherDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeacherDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Course/GetCourseById/{id}": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Obtiene la información de un curso específico por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del curso a consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Curso encontrado.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              }
            }
          },
          "404": {
            "description": "Curso no encontrado."
          }
        }
      }
    },
    "/api/Course/DeleteCourse/{id}": {
      "delete": {
        "tags": [
          "Course"
        ],
        "summary": "Elimina un curso por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del curso a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Curso eliminado exitosamente."
          },
          "404": {
            "description": "Curso no encontrado."
          },
          "500": {
            "description": "Error interno al intentar eliminar el curso."
          }
        }
      }
    },
    "/api/Course/UpdateCourse/{id}": {
      "put": {
        "tags": [
          "Course"
        ],
        "summary": "Actualiza la información de un curso existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del curso a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los nuevos datos del curso.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCourseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCourseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCourseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Curso actualizado correctamente."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "404": {
            "description": "Curso no encontrado."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/Qualification/CreateQualification": {
      "post": {
        "tags": [
          "Qualification"
        ],
        "summary": "Crea una nueva calificación en el sistema.",
        "requestBody": {
          "description": "Objeto que contiene la información de la calificación a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQualificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQualificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQualificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/QualificationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualificationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualificationDto"
                }
              }
            }
          },
          "201": {
            "description": "Calificación creada exitosamente."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/Qualification/GetAllQualification": {
      "get": {
        "tags": [
          "Qualification"
        ],
        "summary": "Obtiene la lista de todas las calificaciones registradas.",
        "responses": {
          "200": {
            "description": "Lista obtenida correctamente.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QualificationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QualificationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QualificationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Qualification/GetQualificationById/{id}": {
      "get": {
        "tags": [
          "Qualification"
        ],
        "summary": "Obtiene la información de una calificación específica por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la calificación a consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calificación encontrada.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              }
            }
          },
          "404": {
            "description": "Calificación no encontrada."
          }
        }
      }
    },
    "/api/Qualification/DeleteQualification/{id}": {
      "delete": {
        "tags": [
          "Qualification"
        ],
        "summary": "Elimina una calificación por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la calificación a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calificación eliminada exitosamente."
          },
          "404": {
            "description": "Calificación no encontrada."
          },
          "500": {
            "description": "Error interno al intentar eliminar la calificación."
          }
        }
      }
    },
    "/api/Qualification/UpdateQualification/{id}": {
      "put": {
        "tags": [
          "Qualification"
        ],
        "summary": "Actualiza la información de una calificación existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la calificación a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los nuevos datos de la calificación.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQualificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQualificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQualificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calificación actualizada correctamente."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "404": {
            "description": "Calificación no encontrada."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/Student/CreateStudent": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Crea un nuevo estudiante en el sistema.",
        "requestBody": {
          "description": "Objeto que contiene la información del estudiante a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStudentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStudentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStudentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentDto"
                }
              }
            }
          },
          "201": {
            "description": "Estudiante creado exitosamente."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/Student/GetAllStudent": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Obtiene la lista de todos los estudiantes registrados.",
        "responses": {
          "200": {
            "description": "Lista obtenida correctamente.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Student/GetStudentById/{id}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Obtiene la información de un estudiante específico por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del estudiante a consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estudiante encontrado.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              }
            }
          },
          "404": {
            "description": "Estudiante no encontrado."
          }
        }
      }
    },
    "/api/Student/DeleteStudent/{id}": {
      "delete": {
        "tags": [
          "Student"
        ],
        "summary": "Elimina un estudiante por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del estudiante a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estudiante eliminado exitosamente."
          },
          "404": {
            "description": "Estudiante no encontrado."
          },
          "500": {
            "description": "Error interno al intentar eliminar el estudiante."
          }
        }
      }
    },
    "/api/Student/UpdateStudent/{id}": {
      "put": {
        "tags": [
          "Student"
        ],
        "summary": "Actualiza la información de un estudiante existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del estudiante a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los nuevos datos del estudiante.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStudentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStudentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStudentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estudiante actualizado correctamente."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "404": {
            "description": "Estudiante no encontrado."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/Teacher/CreateTeacher": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Crea un nuevo profesor en el sistema.",
        "requestBody": {
          "description": "Objeto que contiene la información del profesor a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeacherDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeacherDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeacherDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              }
            }
          },
          "201": {
            "description": "Profesor creado exitosamente."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/Teacher/GetAllTeacher": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "summary": "Obtiene la lista de todos los profesores registrados.",
        "responses": {
          "200": {
            "description": "Lista obtenida correctamente.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeacherDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeacherDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeacherDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Teacher/GetTeacherById/{id}": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "summary": "Obtiene la información de un profesor específico por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del profesor a consultar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profesor encontrado.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDto"
                }
              }
            }
          },
          "404": {
            "description": "Profesor no encontrado."
          }
        }
      }
    },
    "/api/Teacher/DeleteTeacher/{id}": {
      "delete": {
        "tags": [
          "Teacher"
        ],
        "summary": "Elimina un profesor por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del profesor a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profesor eliminado exitosamente."
          },
          "404": {
            "description": "Profesor no encontrado."
          },
          "500": {
            "description": "Error interno al intentar eliminar el profesor."
          }
        }
      }
    },
    "/api/Teacher/UpdateTeacher/{id}": {
      "put": {
        "tags": [
          "Teacher"
        ],
        "summary": "Actualiza la información de un profesor existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del profesor a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto con los nuevos datos del profesor.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeacherDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeacherDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeacherDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profesor actualizado correctamente."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "404": {
            "description": "Profesor no encontrado."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CourseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "courseName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCourseDto": {
        "required": [
          "courseName",
          "teacherId"
        ],
        "type": "object",
        "properties": {
          "courseName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "teacherId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateQualificationDto": {
        "required": [
          "courseId",
          "score",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "courseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "maximum": 5,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateStudentDto": {
        "required": [
          "birthDate",
          "email",
          "firstName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "email": {
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "CreateTeacherDto": {
        "required": [
          "email",
          "firstName",
          "specialty"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "email": {
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "type": "string",
            "format": "email"
          },
          "specialty": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QualificationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "qualificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StudentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeacherDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "specialty": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCourseDto": {
        "type": "object",
        "properties": {
          "courseName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "teacherId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateQualificationDto": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "courseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "qualificationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStudentDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTeacherDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "specialty": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Introduce el token en el siguiente formato: Bearer {token}",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}